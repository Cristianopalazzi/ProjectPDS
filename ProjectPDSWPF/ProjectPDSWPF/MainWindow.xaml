<Controls:MetroWindow x:Class="ProjectPDSWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectPDSWPF"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="PDSProject" Height="350" Width="650"
        GlowBrush="Black"
        BorderThickness="0"
        Name="myMainWindow">
    <Grid>
        <TabControl Name="tabControl"  Width="Auto" >
            <TabItem Header="File in ricezione" Controls:ControlsHelper.HeaderFontSize="20" >
                <ListView Name="listReceivingFiles" ItemsSource="{Binding FilesToReceive}">

                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Rimuovi" Click="receiving_files_menu_delete_click"/>
                            <MenuItem Header="Rimuovi i completati" Click="receiving_files_menu_all_delete_click"/>
                        </ContextMenu>
                    </ListView.ContextMenu>


                    <ListView.Resources>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <Style TargetType="ListView">
                            <Style.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListView">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Non ci sono file in ricezione" FontSize="24">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="FontSize" Value="24" />
                                                            <Setter Property="FontFamily" Value="Arial" />
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </ListView.Resources>


                    <ListView.View>
                        <GridView>
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="5" VerticalAlignment="Center">
                                            <Ellipse Height="64" Width="64">
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{Binding Image}"/>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            <TextBlock Text="{Binding Name}" TextAlignment="Center" FontSize="16"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock ToolTip="{Binding Filename}" TextTrimming="CharacterEllipsis" Text="{Binding Filename}" TextAlignment="Left" FontSize="16" Margin="5,0" VerticalAlignment="Center" MaxWidth="100"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>


                            <GridViewColumn Width="240">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <ProgressBar Value="{Binding Value}" Height="20"/>
                                            <TextBlock Text="{Binding Value, StringFormat={}{0:0}%}" Foreground="Black"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Pic}" Width="32" Height="32" VerticalAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>

                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style  TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </TabItem>
            <TabItem Header="File in invio" Controls:ControlsHelper.HeaderFontSize="20">
                <ListView Name="sendingFiles" ItemsSource="{Binding FilesToSend}">
                    <ListView.Resources>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <Style TargetType="ListView">
                            <Style.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListView">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Non ci sono file in invio" FontSize="24">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="FontSize" Value="24" />
                                                            <Setter Property="FontFamily" Value="Arial" />
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </ListView.Resources>

                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Rimuovi" Click="sending_files_menu_delete_click"/>
                            <MenuItem Header="Rimuovi i completati" Click="sending_files_menu_all_delete_click"/>
                        </ContextMenu>
                    </ListView.ContextMenu>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="5" VerticalAlignment="Center">
                                            <Ellipse Height="64" Width="64">
                                                <Ellipse.Fill>
                                                    <ImageBrush ImageSource="{Binding Immagine}"/>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            <TextBlock Text="{Binding Name}" TextAlignment="Center" FontSize="16"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="240">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock  Foreground="Black" HorizontalAlignment="Center"  Margin="0,0,0,10">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PROGRESS }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="{Binding RemainingTime, StringFormat= Tempo rimanente \{0\}}" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ACCEPTANCE }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="In attesa di conferma" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PREPARATION }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="Preparazione del file" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.COMPLETED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="Inviato con successo" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.CANCELED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="Invio Annullato" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.REJECTED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="File rifiutato" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ERROR }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Text" Value="Si è verificato un errore durante l'invio" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <Grid>
                                                <ProgressBar Value="{Binding Value}" Height="20"  VerticalAlignment="Center" />
                                                <TextBlock Text="{Binding Value, StringFormat={}{0:0}%}" Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="140">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Cancel" Height="20" Width="100" Click="Cancel_Click" VerticalAlignment="Center">


                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.CANCELED }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.COMPLETED }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PROGRESS }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PREPARATION }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ACCEPTANCE }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ERROR }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.REJECTED }" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>

                                        </Button>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>


                            <GridViewColumn Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Controls:ProgressRing  VerticalAlignment="Center" Foreground="{DynamicResource AccentColorBrush}">
                                                <Controls:ProgressRing.Style>
                                                    <Style TargetType="Controls:ProgressRing">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PREPARATION }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="True" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.PROGRESS }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.COMPLETED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.CANCELED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ERROR }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.ACCEPTANCE }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=File_state}" Value="{x:Static local:Constants+FILE_STATE.REJECTED }" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="IsActive" Value="False" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Controls:ProgressRing.Style>
                                            </Controls:ProgressRing>
                                            <Image Source="{Binding Pic}" Width="32" Height="32" VerticalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>

                    <ListView.ItemContainerStyle>
                        <Style  TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock FontWeight="Bold" FontSize="16" HorizontalAlignment="Left" MaxWidth="550" TextTrimming="CharacterEllipsis" Margin="5" ToolTip="{Binding Name}" Text="{Binding Name}"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>

                </ListView>

            </TabItem>
            <TabItem Header="Contatti online" Controls:ControlsHelper.HeaderFontSize="20" >
                <Grid>
                    <DockPanel LastChildFill="True">
                        <ListView x:Name="Neighbors" ItemsSource="{Binding NeighborsValues}" HorizontalAlignment="Stretch" VerticalAlignment="Top" DockPanel.Dock="Top">
                            <ListView.Resources>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Style>
                                <Style TargetType="ListView">
                                    <Style.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="BorderThickness" Value="0" />
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="true" >
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Border
                BorderThickness="{TemplateBinding Border.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                Background="{TemplateBinding Panel.Background}"
                SnapsToDevicePixels="True">
                                                            <ContentPresenter
                    Content="{TemplateBinding ContentControl.Content}"
                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListViewItem">
                                                        <Border
                BorderThickness="{TemplateBinding Border.BorderThickness}"
                Padding="{TemplateBinding Control.Padding}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                Background="{TemplateBinding Panel.Background}"
                SnapsToDevicePixels="True">
                                                            <ContentPresenter
                    Content="{TemplateBinding ContentControl.Content}"
                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="5" HorizontalAlignment="Stretch" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="5"
                                                 ToolTip="{Binding NeighborName}">
                                        <Ellipse Height="64" Width="64" HorizontalAlignment="Center">
                                            <Ellipse.Fill>
                                                <ImageBrush  ImageSource="{Binding NeighborImage}" />
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <TextBlock Text="{Binding NeighborName}" HorizontalAlignment="Left" FontSize="16" VerticalAlignment="Bottom"
                                                   MaxWidth="80" TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                        </ListView>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Nessun contatto online" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" >
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize" Value="24" />
                                    <Setter Property="FontFamily" Value="Arial" />
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Items.Count, ElementName = Neighbors}"
                             Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Impostazioni" Selector.Unselected="tabChanged" Controls:ControlsHelper.HeaderFontSize="20">

                <Grid Name="gridSettings" Margin="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock  Grid.Row="0" Grid.Column="0" Text="AutoAccept"  FontSize="20" Margin="5,5,5,10" />
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Default Directory"  FontSize="20" Margin="5,5,5,10"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Default Directory Path"  FontSize="20" Margin="5,5,5,10" VerticalAlignment="Center"/>
                    <CheckBox Margin ="10,0,0,0" IsChecked ="{Binding Path = AutoAccept}"  Grid.Row ="0" Grid.Column="2" Name="CheckAutoAccept" VerticalAlignment="Center"/>
                    <CheckBox Margin ="10,0,0,0" IsChecked ="{Binding Path = DefaultDir}" Grid.Row ="1" Grid.Column="2" Name="CheckDefaultDir" VerticalAlignment="Center"/>
                    <Button Grid.Row="2" Grid.Column="1" Content="..." Margin="10" Click="openFolderBrowserDialog"  >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MetroButton}" />
                        </Button.Style>
                    </Button>
                    <TextBox Margin ="10,0,0,0" Text ="{Binding Path= DefaultDirPath}" Grid.Row="2" Grid.Column="2" Name="defaultDirPath" IsReadOnly="true" FontSize="20" VerticalContentAlignment="Center" />

                </Grid>

            </TabItem>
        </TabControl>
    </Grid>
</Controls:MetroWindow>